{"version":3,"sources":["js/jquery.orgchart.js"],"names":["factory","module","exports","require","window","document","jQuery","$","undefined","OrgChart","elem","opts","this","$chartContainer","defaultOptions","nodeTitle","nodeId","toggleSiblingsResp","depth","chartClass","exportButton","exportFilename","exportFileextension","parentNodeSymbol","draggable","direction","pan","zoom","zoominLimit","zoomoutLimit","prototype","init","that","options","extend","$chart","remove","data","class","click","event","target","closest","length","find","removeClass","MutationObserver","mo","mutations","disconnect","initTime","i","j","addedNodes","classList","contains","initCompleted","triggerHandler","type","observe","childList","buildHierarchy","buildJsonDS","children","ajaxURL","attachRel","ajax","url","dataType","beforeSend","append","done","textStatus","jqXHR","fail","errorThrown","console","log","always","$exportBtn","text","e","preventDefault","$mask","sourceChart","addClass","get","flag","html2canvas","width","clientHeight","clientWidth","height","onclone","cloneDoc","css","onrendered","canvas","toLowerCase","doc","docWidth","Math","floor","docHeight","jsPDF","addImage","toDataURL","save","isWebkit","documentElement","style","isFf","sidebar","isEdge","navigator","appName","appVersion","indexOf","msSaveBlob","msToBlob","attr","then","downloadBtn","after","bindPan","bindZoom","setOptions","val","unbindPan","unbindZoom","panStartHandler","delegateTarget","touches","lastX","lastY","lastTf","temp","split","parseInt","startX","startY","targetTouches","pageX","pageY","on","newX","newY","matrix","join","panEndHandler","chart","off","zoomWheelHandler","oc","newScale","originalEvent","deltaY","setChartScale","zoomStartHandler","dist","getPinchDist","zoomingHandler","zoomEndHandler","diff","sqrt","clientX","clientY","targetScale","parseFloat","$li","subObj","name","contents","eq","trim","relationship","parent","is","siblings","id","each","push","flags","forEach","item","loopChart","$tr","getHierarchy","getNodeState","$node","relation","$target","exist","visible","getRelatedNodes","hideParent","$temp","hideSiblings","$lines","slice","$parent","grandfatherVisible","one","removeAttr","showParent","repaint","isInAction","switchVerticalArrow","hideChildren","last","$visibleNodes","isVerticalDesc","prevAll","showChildren","$levels","$descendants","$nodeContainer","nextAll","$animatedNodes","$siblings","prev","end","switchHorizontalArrow","showSiblings","$upperLevel","startLoading","$arrow","not","prop","endLoading","toggleClass","$prevSib","$nextSib","next","$sibs","sibsVisible","node","offsetWidth","createNode","nodeData","level","index","child","parentId","dtd","Deferred","$nodeDiv","className","nodeTemplate","nodeContent","verticalDepth","Number","substr","icon","prepend","$topEdge","$bottomEdge","$leftEdge","stopPropagation","$that","parentState","isFunction","isEmptyObject","addParent","childrenState","addChildren","$this","$descWrapper","$children","siblingsState","families","addSiblings","origEvent","isFirefox","test","userAgent","dataTransfer","setData","ghostNode","nodeCover","querySelector","createElementNS","add","appendChild","transValues","scale","abs","setAttribute","outerWidth","outerHeight","xOffset","offsetX","yOffset","offsetY","ghostNodeWrapper","createElement","src","XMLSerializer","serializeToString","setDragImage","$dragged","$dragZone","$dragHier","dropCriteria","dropEffect","$dropZone","$orgchart","dropColspan","horizontalEdges","addBack","before","$dropSibs","dragColspan","$dragSibs","draggedNode","dragZone","dropZone","resolve","promise","$appendTo","callback","$nodeWrapper","$childNodes","hasChildren","isVerticalNode","Object","keys","when","wrap","isHidden","collapsed","isVerticalLayer","lineLayer","$nodeLayer","$nodeCell","buildChildNode","count","buildParentNode","$currentRoot","$table","complementLine","$oneSibling","siblingCount","existingSibligCount","lines","buildSiblingNode","$nodeChart","newSiblingCount","insertPostion","childCount","$siblingTds","unwrap","nodeCount","removeNodes","fn","orgchart"],"mappings":"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","file":"jquery.orgchart.min.js","sourcesContent":["/*\r\n * jQuery OrgChart Plugin\r\n * https://github.com/dabeng/OrgChart\r\n *\r\n * Copyright 2016, dabeng\r\n * https://github.com/dabeng\r\n *\r\n * Licensed under the MIT license:\r\n * http://www.opensource.org/licenses/MIT\r\n */\r\n'use strict';\r\n\r\n(function (factory) {\r\n  if (typeof module === 'object' && typeof module.exports === 'object') {\r\n    factory(require('jquery'), window, document);\r\n  } else {\r\n    factory(jQuery, window, document);\r\n  }\r\n}(function ($, window, document, undefined) {\r\n  var OrgChart = function (elem, opts) {\r\n    this.$chartContainer = $(elem);\r\n    this.opts = opts;\r\n    this.defaultOptions = {\r\n      'nodeTitle': 'name',\r\n      'nodeId': 'id',\r\n      'toggleSiblingsResp': false,\r\n      'depth': 999,\r\n      'chartClass': '',\r\n      'exportButton': false,\r\n      'exportFilename': 'OrgChart',\r\n      'exportFileextension': 'png',\r\n      'parentNodeSymbol': 'fa-users',\r\n      'draggable': false,\r\n      'direction': 't2b',\r\n      'pan': false,\r\n      'zoom': false,\r\n      'zoominLimit': 7,\r\n      'zoomoutLimit': 0.5\r\n    };\r\n  };\r\n  //\r\n  OrgChart.prototype = {\r\n    //\r\n    init: function (opts) {\r\n      var that = this;\r\n      this.options = $.extend({}, this.defaultOptions, this.opts, opts);\r\n      // build the org-chart\r\n      var $chartContainer = this.$chartContainer;\r\n      if (this.$chart) {\r\n        this.$chart.remove();\r\n      }\r\n      var data = this.options.data;\r\n      var $chart = this.$chart = $('<div>', {\r\n        'data': { 'options': this.options },\r\n        'class': 'orgchart' + (this.options.chartClass !== '' ? ' ' + this.options.chartClass : '') + (this.options.direction !== 't2b' ? ' ' + this.options.direction : ''),\r\n        'click': function(event) {\r\n          if (!$(event.target).closest('.node').length) {\r\n            $chart.find('.node.focused').removeClass('focused');\r\n          }\r\n        }\r\n      });\r\n      if (typeof MutationObserver !== 'undefined') {\r\n        var mo = new MutationObserver(function (mutations) {\r\n          mo.disconnect();\r\n          initTime:\r\n          for (var i = 0; i < mutations.length; i++) {\r\n            for (var j = 0; j < mutations[i].addedNodes.length; j++) {\r\n              if (mutations[i].addedNodes[j].classList.contains('orgchart')) {\r\n                if (that.options.initCompleted && typeof that.options.initCompleted === 'function') {\r\n                  that.options.initCompleted($chart);\r\n                  $chart.triggerHandler({ 'type': 'init.orgchart' });\r\n                  break initTime;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        });\r\n      mo.observe($chartContainer[0], { childList: true });\r\n      }\r\n      if ($.type(data) === 'object') {\r\n        if (data instanceof $) { // ul datasource\r\n          this.buildHierarchy($chart, this.buildJsonDS(data.children()), 0, this.options);\r\n        } else { // local json datasource\r\n          this.buildHierarchy($chart, this.options.ajaxURL ? data : this.attachRel(data, '00'), 0, this.options);\r\n        }\r\n      } else {\r\n        $.ajax({\r\n          'url': data,\r\n          'dataType': 'json',\r\n          'beforeSend': function () {\r\n            $chart.append('<i class=\"fa fa-circle-o-notch fa-spin spinner\"></i>');\r\n          }\r\n        })\r\n        .done(function(data, textStatus, jqXHR) {\r\n          that.buildHierarchy($chart, that.options.ajaxURL ? data : that.attachRel(data, '00'), 0, that.options);\r\n        })\r\n        .fail(function(jqXHR, textStatus, errorThrown) {\r\n          console.log(errorThrown);\r\n        })\r\n        .always(function() {\r\n          $chart.children('.spinner').remove();\r\n        });\r\n      }\r\n      $chartContainer.append($chart);\r\n\r\n      // append the export button\r\n      if (this.options.exportButton && !$chartContainer.find('.oc-export-btn').length) {\r\n        var $exportBtn = $('<button>', {\r\n          'class': 'oc-export-btn' + (this.options.chartClass !== '' ? ' ' + this.options.chartClass : ''),\r\n          'text': 'Export',\r\n          'click': function(e) {\r\n            e.preventDefault();\r\n            if ($(this).children('.spinner').length) {\r\n              return false;\r\n            }\r\n            var $mask = $chartContainer.find('.mask');\r\n            if (!$mask.length) {\r\n              $chartContainer.append('<div class=\"mask\"><i class=\"fa fa-circle-o-notch fa-spin spinner\"></i></div>');\r\n            } else {\r\n              $mask.removeClass('hidden');\r\n            }\r\n            var sourceChart = $chartContainer.addClass('canvasContainer').find('.orgchart:visible').get(0);\r\n            var flag = that.options.direction === 'l2r' || that.options.direction === 'r2l';\r\n            html2canvas(sourceChart, {\r\n              'width': flag ? sourceChart.clientHeight : sourceChart.clientWidth,\r\n              'height': flag ? sourceChart.clientWidth : sourceChart.clientHeight,\r\n              'onclone': function(cloneDoc) {\r\n                $(cloneDoc).find('.canvasContainer').css('overflow', 'visible')\r\n                  .find('.orgchart:visible:first').css('transform', '');\r\n              },\r\n              'onrendered': function(canvas) {\r\n                $chartContainer.find('.mask').addClass('hidden');\r\n                if (that.options.exportFileextension.toLowerCase() === 'pdf') {\r\n                  var doc = {};\r\n                  var docWidth = Math.floor(canvas.width * 0.2646);\r\n                  var docHeight = Math.floor(canvas.height * 0.2646);\r\n                  if (docWidth > docHeight) {\r\n                    doc = new jsPDF('l', 'mm', [docWidth, docHeight]);\r\n                  } else {\r\n                    doc = new jsPDF('p', 'mm', [docHeight, docWidth]);\r\n                  }\r\n                  doc.addImage(canvas.toDataURL(), 'png', 0, 0);\r\n                  doc.save(that.options.exportFilename + '.pdf');\r\n                } else {\r\n                  var isWebkit = 'WebkitAppearance' in document.documentElement.style;\r\n                  var isFf = !!window.sidebar;\r\n                  var isEdge = navigator.appName === 'Microsoft Internet Explorer' || (navigator.appName === \"Netscape\" && navigator.appVersion.indexOf('Edge') > -1);\r\n\r\n                  if ((!isWebkit && !isFf) || isEdge) {\r\n                    window.navigator.msSaveBlob(canvas.msToBlob(), that.options.exportFilename + '.png');\r\n                  } else {\r\n                    $chartContainer.find('.oc-download-btn').attr('href', canvas.toDataURL())[0].click();\r\n                  }\r\n                }\r\n              }\r\n            })\r\n            .then(function() {\r\n              $chartContainer.removeClass('canvasContainer');\r\n            }, function() {\r\n              $chartContainer.removeClass('canvasContainer');\r\n            });\r\n          }\r\n        });\r\n        $chartContainer.append($exportBtn);\r\n        if (this.options.exportFileextension.toLowerCase() !== 'pdf') {\r\n          var downloadBtn = '<a class=\"oc-download-btn' + (this.options.chartClass !== '' ? ' ' + this.options.chartClass : '') + '\"'\r\n          + ' download=\"' + this.options.exportFilename + '.png\"></a>';\r\n          $exportBtn.after(downloadBtn);\r\n        }\r\n      }\r\n\r\n      if (this.options.pan) {\r\n        this.bindPan();\r\n      }\r\n\r\n      if (this.options.zoom) {\r\n        this.bindZoom();\r\n      }\r\n\r\n      return this;\r\n    },\r\n    //\r\n    setOptions: function (opts, val) {\r\n      if (typeof opts === 'string') {\r\n        if (opts === 'pan') {\r\n          if (val) {\r\n            this.bindPan();\r\n          } else {\r\n            this.unbindPan();\r\n          }\r\n        }\r\n        if (opts === 'zoom') {\r\n          if (val) {\r\n            this.bindZoom();\r\n          } else {\r\n            this.unbindZoom();\r\n          }\r\n        }\r\n      }\r\n      if (typeof opts === 'object') {\r\n        if (opts.data) {\r\n          this.init(opts);\r\n        } else {\r\n          if (typeof opts.pan !== 'undefined') {\r\n            if (opts.pan) {\r\n              this.bindPan();\r\n            } else {\r\n              this.unbindPan();\r\n            }\r\n          }\r\n          if (typeof opts.zoom !== 'undefined') {\r\n            if (opts.zoom) {\r\n              this.bindZoom();\r\n            } else {\r\n              this.unbindZoom();\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return this;\r\n    },\r\n    //\r\n    panStartHandler: function (e) {\r\n      var $chart = $(e.delegateTarget);\r\n      if ($(e.target).closest('.node').length || (e.touches && e.touches.length > 1)) {\r\n        $chart.data('panning', false);\r\n        return;\r\n      } else {\r\n        $chart.css('cursor', 'move').data('panning', true);\r\n      }\r\n      var lastX = 0;\r\n      var lastY = 0;\r\n      var lastTf = $chart.css('transform');\r\n      if (lastTf !== 'none') {\r\n        var temp = lastTf.split(',');\r\n        if (lastTf.indexOf('3d') === -1) {\r\n          lastX = parseInt(temp[4]);\r\n          lastY = parseInt(temp[5]);\r\n        } else {\r\n          lastX = parseInt(temp[12]);\r\n          lastY = parseInt(temp[13]);\r\n        }\r\n      }\r\n      var startX = 0;\r\n      var startY = 0;\r\n      if (!e.targetTouches) { // pand on desktop\r\n        startX = e.pageX - lastX;\r\n        startY = e.pageY - lastY;\r\n      } else if (e.targetTouches.length === 1) { // pan on mobile device\r\n        startX = e.targetTouches[0].pageX - lastX;\r\n        startY = e.targetTouches[0].pageY - lastY;\r\n      } else if (e.targetTouches.length > 1) {\r\n        return;\r\n      }\r\n      $chart.on('mousemove touchmove',function(e) {\r\n        if (!$chart.data('panning')) {\r\n          return;\r\n        }\r\n        var newX = 0;\r\n        var newY = 0;\r\n        if (!e.targetTouches) { // pand on desktop\r\n          newX = e.pageX - startX;\r\n          newY = e.pageY - startY;\r\n        } else if (e.targetTouches.length === 1) { // pan on mobile device\r\n          newX = e.targetTouches[0].pageX - startX;\r\n          newY = e.targetTouches[0].pageY - startY;\r\n        } else if (e.targetTouches.length > 1) {\r\n          return;\r\n        }\r\n        var lastTf = $chart.css('transform');\r\n        if (lastTf === 'none') {\r\n          if (lastTf.indexOf('3d') === -1) {\r\n            $chart.css('transform', 'matrix(1, 0, 0, 1, ' + newX + ', ' + newY + ')');\r\n          } else {\r\n            $chart.css('transform', 'matrix3d(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, ' + newX + ', ' + newY + ', 0, 1)');\r\n          }\r\n        } else {\r\n          var matrix = lastTf.split(',');\r\n          if (lastTf.indexOf('3d') === -1) {\r\n            matrix[4] = ' ' + newX;\r\n            matrix[5] = ' ' + newY + ')';\r\n          } else {\r\n            matrix[12] = ' ' + newX;\r\n            matrix[13] = ' ' + newY;\r\n          }\r\n          $chart.css('transform', matrix.join(','));\r\n        }\r\n      });\r\n    },\r\n    //\r\n    panEndHandler: function (e) {\r\n      if (e.data.chart.data('panning')) {\r\n        e.data.chart.data('panning', false).css('cursor', 'default').off('mousemove');\r\n      }\r\n    },\r\n    //\r\n    bindPan: function () {\r\n      this.$chartContainer.css('overflow', 'hidden');\r\n      this.$chart.on('mousedown touchstart', this.panStartHandler);\r\n      $(document).on('mouseup touchend', { 'chart': this.$chart }, this.panEndHandler);\r\n    },\r\n    //\r\n    unbindPan: function () {\r\n      this.$chartContainer.css('overflow', 'auto');\r\n      this.$chart.off('mousedown touchstart', this.panStartHandler);\r\n      $(document).off('mouseup touchend', this.panEndHandler);\r\n    },\r\n    //\r\n    zoomWheelHandler: function (e) {\r\n      var oc = e.data.oc;\r\n      e.preventDefault();\r\n      var newScale  = 1 + (e.originalEvent.deltaY > 0 ? -0.2 : 0.2);\r\n      oc.setChartScale(oc.$chart, newScale);\r\n    },\r\n    //\r\n    zoomStartHandler: function (e) {\r\n      if(e.touches && e.touches.length === 2) {\r\n        var oc = e.data.oc;\r\n        oc.$chart.data('pinching', true);\r\n        var dist = oc.getPinchDist(e);\r\n        oc.$chart.data('pinchDistStart', dist);\r\n      }\r\n    },\r\n    zoomingHandler: function (e) {\r\n      var oc = e.data.oc;\r\n      if(oc.$chart.data('pinching')) {\r\n        var dist = oc.getPinchDist(e);\r\n        oc.$chart.data('pinchDistEnd', dist);\r\n      }\r\n    },\r\n    zoomEndHandler: function (e) {\r\n      var oc = e.data.oc;\r\n      if(oc.$chart.data('pinching')) {\r\n        oc.$chart.data('pinching', false);\r\n        var diff = oc.$chart.data('pinchDistEnd') - oc.$chart.data('pinchDistStart');\r\n        if (diff > 0) {\r\n          oc.setChartScale(oc.$chart, 1.2);\r\n        } else if (diff < 0) {\r\n          oc.setChartScale(oc.$chart, 0.8);\r\n        }\r\n      }\r\n    },\r\n    //\r\n    bindZoom: function () {\r\n      this.$chartContainer.on('wheel', { 'oc': this }, this.zoomWheelHandler);\r\n      this.$chartContainer.on('touchstart', { 'oc': this }, this.zoomStartHandler);\r\n      $(document).on('touchmove', { 'oc': this }, this.zoomingHandler);\r\n      $(document).on('touchend', { 'oc': this }, this.zoomEndHandler);\r\n    },\r\n    unbindZoom: function () {\r\n      this.$chartContainer.off('wheel', this.zoomWheelHandler);\r\n      this.$chartContainer.off('touchstart', this.zoomStartHandler);\r\n      $(document).off('touchmove', this.zoomingHandler);\r\n      $(document).off('touchend', this.zoomEndHandler);\r\n    },\r\n    //\r\n    getPinchDist: function (e) {\r\n      return Math.sqrt((e.touches[0].clientX - e.touches[1].clientX) * (e.touches[0].clientX - e.touches[1].clientX) +\r\n      (e.touches[0].clientY - e.touches[1].clientY) * (e.touches[0].clientY - e.touches[1].clientY));\r\n    },\r\n    //\r\n    setChartScale: function ($chart, newScale) {\r\n      var opts = $chart.data('options');\r\n      var lastTf = $chart.css('transform');\r\n      var matrix = '';\r\n      var targetScale = 1;\r\n      if (lastTf === 'none') {\r\n        $chart.css('transform', 'scale(' + newScale + ',' + newScale + ')');\r\n      } else {\r\n        matrix = lastTf.split(',');\r\n        if (lastTf.indexOf('3d') === -1) {\r\n          targetScale = window.parseFloat(matrix[3]) * newScale;\r\n          if (targetScale > opts.zoomoutLimit && targetScale < opts.zoominLimit) {\r\n            $chart.css('transform', lastTf + ' scale(' + newScale + ',' + newScale + ')');\r\n          }\r\n        } else {\r\n          targetScale = window.parseFloat(matrix[1]) * newScale;\r\n          if (targetScale > opts.zoomoutLimit && targetScale < opts.zoominLimit) {\r\n            $chart.css('transform', lastTf + ' scale3d(' + newScale + ',' + newScale + ', 1)');\r\n          }\r\n        }\r\n      }\r\n    },\r\n    //\r\n    buildJsonDS: function ($li) {\r\n      var that = this;\r\n      var subObj = {\r\n        'name': $li.contents().eq(0).text().trim(),\r\n        'relationship': ($li.parent().parent().is('li') ? '1': '0') + ($li.siblings('li').length ? 1: 0) + ($li.children('ul').length ? 1 : 0)\r\n      };\r\n      if ($li[0].id) {\r\n        subObj.id = $li[0].id;\r\n      }\r\n      $li.children('ul').children().each(function() {\r\n        if (!subObj.children) { subObj.children = []; }\r\n        subObj.children.push(that.buildJsonDS($(this)));\r\n      });\r\n      return subObj;\r\n    },\r\n    //\r\n    attachRel: function (data, flags) {\r\n      var that = this;\r\n      data.relationship = flags + (data.children && data.children.length > 0 ? 1 : 0);\r\n      if (data.children) {\r\n        data.children.forEach(function(item) {\r\n          that.attachRel(item, '1' + (data.children.length > 1 ? 1 : 0));\r\n        });\r\n      }\r\n      return data;\r\n    },\r\n    //\r\n    loopChart: function ($chart) {\r\n      var that = this;\r\n      var $tr = $chart.find('tr:first');\r\n      var subObj = { 'id': $tr.find('.node')[0].id };\r\n      $tr.siblings(':last').children().each(function() {\r\n        if (!subObj.children) { subObj.children = []; }\r\n        subObj.children.push(that.loopChart($(this)));\r\n      });\r\n      return subObj;\r\n    },\r\n    //\r\n    getHierarchy: function ($chart) {\r\n      var $chart = $chart || this.$chart;\r\n      if (!$chart.find('.node:first')[0].id) {\r\n        return 'Error: Nodes of orghcart to be exported must have id attribute!';\r\n      }\r\n      return this.loopChart($chart);\r\n    },\r\n    // detect the exist/display state of related node\r\n    getNodeState: function ($node, relation) {\r\n      var $target = {};\r\n      if (relation === 'parent') {\r\n        $target = $node.closest('.nodes').siblings(':first');\r\n      } else if (relation === 'children') {\r\n        $target = $node.closest('tr').siblings();\r\n      } else if (relation === 'siblings') {\r\n        $target = $node.closest('table').parent().siblings();\r\n      }\r\n      if ($target.length) {\r\n        if ($target.is(':visible')) {\r\n          return { 'exist': true, 'visible': true };\r\n        }\r\n        return { 'exist': true, 'visible': false };\r\n      }\r\n      return { 'exist': false, 'visible': false };\r\n    },\r\n    // find the related nodes\r\n    getRelatedNodes: function ($node, relation) {\r\n      if (relation === 'parent') {\r\n        return $node.closest('.nodes').parent().children(':first').find('.node');\r\n      } else if (relation === 'children') {\r\n        return $node.closest('table').children(':last').children().find('.node:first');\r\n      } else if (relation === 'siblings') {\r\n        return $node.closest('table').parent().siblings().find('.node:first');\r\n      }\r\n    },\r\n    // recursively hide the ancestor node and sibling nodes of the specified node\r\n    hideParent: function ($node) {\r\n      var $temp = $node.closest('table').closest('tr').siblings();\r\n      if ($temp.eq(0).find('.spinner').length) {\r\n        $node.closest('.orgchart').data('inAjax', false);\r\n      }\r\n      // hide the sibling nodes\r\n      if (this.getNodeState($node, 'siblings').visible) {\r\n        this.hideSiblings($node);\r\n      }\r\n      // hide the lines\r\n      var $lines = $temp.slice(1);\r\n      $lines.css('visibility', 'hidden');\r\n      // hide the superior nodes with transition\r\n      var $parent = $temp.eq(0).find('.node');\r\n      var grandfatherVisible = this.getNodeState($parent, 'parent').visible;\r\n      if ($parent.length && $parent.is(':visible')) {\r\n        $parent.addClass('slide slide-down').one('transitionend', function() {\r\n          $parent.removeClass('slide');\r\n          $lines.removeAttr('style');\r\n          $temp.addClass('hidden');\r\n        });\r\n      }\r\n      // if the current node has the parent node, hide it recursively\r\n      if ($parent.length && grandfatherVisible) {\r\n        this.hideParent($parent);\r\n      }\r\n    },\r\n    // show the parent node of the specified node\r\n    showParent: function ($node) {\r\n      var that = this;\r\n      // just show only one superior level\r\n      var $temp = $node.closest('table').closest('tr').siblings().removeClass('hidden');\r\n      // just show only one line\r\n      $temp.eq(2).children().slice(1, -1).addClass('hidden');\r\n      // show parent node with animation\r\n      var parent = $temp.eq(0).find('.node')[0];\r\n      this.repaint(parent);\r\n      $(parent).addClass('slide').removeClass('slide-down').one('transitionend', function() {\r\n        $(parent).removeClass('slide');\r\n        if (that.isInAction($node)) {\r\n          that.switchVerticalArrow($node.children('.topEdge'));\r\n        }\r\n      });\r\n    },\r\n    // recursively hide the descendant nodes of the specified node\r\n    hideChildren: function ($node) {\r\n      var that = this;\r\n      var $temp = $node.closest('tr').siblings();\r\n      if ($temp.last().find('.spinner').length) {\r\n        $node.closest('.orgchart').data('inAjax', false);\r\n      }\r\n      var $visibleNodes = $temp.last().find('.node:visible');\r\n      var isVerticalDesc = $temp.last().is('.verticalNodes') ? true : false;\r\n      if (!isVerticalDesc) {\r\n        var $lines = $visibleNodes.closest('table').closest('tr').prevAll('.lines').css('visibility', 'hidden');\r\n      }\r\n      $visibleNodes.addClass('slide slide-up').eq(0).one('transitionend', function() {\r\n        $visibleNodes.removeClass('slide');\r\n        if (isVerticalDesc) {\r\n          $temp.addClass('hidden');\r\n        } else {\r\n          $lines.removeAttr('style').addClass('hidden').siblings('.nodes').addClass('hidden');\r\n          $temp.last().find('.verticalNodes').addClass('hidden');\r\n        }\r\n        if (that.isInAction($node)) {\r\n          that.switchVerticalArrow($node.children('.bottomEdge'));\r\n        }\r\n      });\r\n    },\r\n    // show the children nodes of the specified node\r\n    showChildren: function ($node) {\r\n      var that = this;\r\n      var $levels = $node.closest('tr').siblings();\r\n      var isVerticalDesc = $levels.is('.verticalNodes') ? true : false;\r\n      var $descendants = isVerticalDesc\r\n        ? $levels.removeClass('hidden').find('.node:visible')\r\n        : $levels.removeClass('hidden').eq(2).children().find('.node:first');\r\n      // the two following statements are used to enforce browser to repaint\r\n      this.repaint($descendants.get(0));\r\n      $descendants.addClass('slide').removeClass('slide-up').eq(0).one('transitionend', function() {\r\n        $descendants.removeClass('slide');\r\n        if (that.isInAction($node)) {\r\n          that.switchVerticalArrow($node.children('.bottomEdge'));\r\n        }\r\n      });\r\n    },\r\n    // hide the sibling nodes of the specified node\r\n    hideSiblings: function ($node, direction) {\r\n      var that = this;\r\n      var $nodeContainer = $node.closest('table').parent();\r\n      if ($nodeContainer.siblings().find('.spinner').length) {\r\n        $node.closest('.orgchart').data('inAjax', false);\r\n      }\r\n      if (direction) {\r\n        if (direction === 'left') {\r\n          $nodeContainer.prevAll().find('.node:visible').addClass('slide slide-right');\r\n        } else {\r\n          $nodeContainer.nextAll().find('.node:visible').addClass('slide slide-left');\r\n        }\r\n      } else {\r\n        $nodeContainer.prevAll().find('.node:visible').addClass('slide slide-right');\r\n        $nodeContainer.nextAll().find('.node:visible').addClass('slide slide-left');\r\n      }\r\n      var $animatedNodes = $nodeContainer.siblings().find('.slide');\r\n      var $lines = $animatedNodes.closest('.nodes').prevAll('.lines').css('visibility', 'hidden');\r\n      $animatedNodes.eq(0).one('transitionend', function() {\r\n        $lines.removeAttr('style');\r\n        var $siblings = direction ? (direction === 'left' ? $nodeContainer.prevAll(':not(.hidden)') : $nodeContainer.nextAll(':not(.hidden)')) : $nodeContainer.siblings();\r\n        $nodeContainer.closest('.nodes').prev().children(':not(.hidden)')\r\n          .slice(1, direction ? $siblings.length * 2 + 1 : -1).addClass('hidden');\r\n        $animatedNodes.removeClass('slide');\r\n        $siblings.find('.node:visible:gt(0)').removeClass('slide-left slide-right').addClass('slide-up')\r\n          .end().find('.lines, .nodes, .verticalNodes').addClass('hidden')\r\n          .end().addClass('hidden');\r\n\r\n        if (that.isInAction($node)) {\r\n          that.switchHorizontalArrow($node);\r\n        }\r\n      });\r\n    },\r\n    // show the sibling nodes of the specified node\r\n    showSiblings: function ($node, direction) {\r\n      var that = this;\r\n      // firstly, show the sibling td tags\r\n      var $siblings = $();\r\n      if (direction) {\r\n        if (direction === 'left') {\r\n          $siblings = $node.closest('table').parent().prevAll().removeClass('hidden');\r\n        } else {\r\n          $siblings = $node.closest('table').parent().nextAll().removeClass('hidden');\r\n        }\r\n      } else {\r\n        $siblings = $node.closest('table').parent().siblings().removeClass('hidden');\r\n      }\r\n      // secondly, show the lines\r\n      var $upperLevel = $node.closest('table').closest('tr').siblings();\r\n      if (direction) {\r\n        $upperLevel.eq(2).children('.hidden').slice(0, $siblings.length * 2).removeClass('hidden');\r\n      } else {\r\n        $upperLevel.eq(2).children('.hidden').removeClass('hidden');\r\n      }\r\n      // thirdly, do some cleaning stuff\r\n      if (!this.getNodeState($node, 'parent').visible) {\r\n        $upperLevel.removeClass('hidden');\r\n        var parent = $upperLevel.find('.node')[0];\r\n        this.repaint(parent);\r\n        $(parent).addClass('slide').removeClass('slide-down').one('transitionend', function() {\r\n          $(this).removeClass('slide');\r\n        });\r\n      }\r\n      // lastly, show the sibling nodes with animation\r\n      $siblings.find('.node:visible').addClass('slide').removeClass('slide-left slide-right').eq(-1).one('transitionend', function() {\r\n        $siblings.find('.node:visible').removeClass('slide');\r\n        if (that.isInAction($node)) {\r\n          that.switchHorizontalArrow($node);\r\n          $node.children('.topEdge').removeClass('fa-chevron-up').addClass('fa-chevron-down');\r\n        }\r\n      });\r\n    },\r\n    // start up loading status for requesting new nodes\r\n    startLoading: function ($arrow, $node, options) {\r\n      var $chart = $node.closest('.orgchart');\r\n      if (typeof $chart.data('inAjax') !== 'undefined' && $chart.data('inAjax') === true) {\r\n        return false;\r\n      }\r\n\r\n      $arrow.addClass('hidden');\r\n      $node.append('<i class=\"fa fa-circle-o-notch fa-spin spinner\"></i>');\r\n      $node.children().not('.spinner').css('opacity', 0.2);\r\n      $chart.data('inAjax', true);\r\n      $('.oc-export-btn' + (options.chartClass !== '' ? '.' + options.chartClass : '')).prop('disabled', true);\r\n      return true;\r\n    },\r\n    // terminate loading status for requesting new nodes\r\n    endLoading: function ($arrow, $node, options) {\r\n      var $chart = $node.closest('div.orgchart');\r\n      $arrow.removeClass('hidden');\r\n      $node.find('.spinner').remove();\r\n      $node.children().removeAttr('style');\r\n      $chart.data('inAjax', false);\r\n      $('.oc-export-btn' + (options.chartClass !== '' ? '.' + options.chartClass : '')).prop('disabled', false);\r\n    },\r\n    // whether the cursor is hovering over the node\r\n    isInAction: function ($node) {\r\n      return $node.children('.edge').attr('class').indexOf('fa-') > -1 ? true : false;\r\n    },\r\n    //\r\n    switchVerticalArrow: function ($arrow) {\r\n      $arrow.toggleClass('fa-chevron-up').toggleClass('fa-chevron-down');\r\n    },\r\n    //\r\n    switchHorizontalArrow: function ($node) {\r\n      var opts = $node.closest('.orgchart').data('options');\r\n      if (opts.toggleSiblingsResp && (typeof opts.ajaxURL === 'undefined' || $node.closest('.nodes').data('siblingsLoaded'))) {\r\n        var $prevSib = $node.closest('table').parent().prev();\r\n        if ($prevSib.length) {\r\n          if ($prevSib.is('.hidden')) {\r\n            $node.children('.leftEdge').addClass('fa-chevron-left').removeClass('fa-chevron-right');\r\n          } else {\r\n            $node.children('.leftEdge').addClass('fa-chevron-right').removeClass('fa-chevron-left');\r\n          }\r\n        }\r\n        var $nextSib = $node.closest('table').parent().next();\r\n        if ($nextSib.length) {\r\n          if ($nextSib.is('.hidden')) {\r\n            $node.children('.rightEdge').addClass('fa-chevron-right').removeClass('fa-chevron-left');\r\n          } else {\r\n            $node.children('.rightEdge').addClass('fa-chevron-left').removeClass('fa-chevron-right');\r\n          }\r\n        }\r\n      } else {\r\n        var $sibs = $node.closest('table').parent().siblings();\r\n        var sibsVisible = $sibs.length ? !$sibs.is('.hidden') : false;\r\n        $node.children('.leftEdge').toggleClass('fa-chevron-right', sibsVisible).toggleClass('fa-chevron-left', !sibsVisible);\r\n        $node.children('.rightEdge').toggleClass('fa-chevron-left', sibsVisible).toggleClass('fa-chevron-right', !sibsVisible);\r\n      }\r\n    },\r\n    //\r\n    repaint: function (node) {\r\n      if (node) {\r\n        node.style.offsetWidth = node.offsetWidth;\r\n      }\r\n    },\r\n    // create node\r\n    createNode: function (nodeData, level, opts) {\r\n      var that = this;\r\n      nodeData.children&&$.each(nodeData.children, function (index, child) {\r\n        child.parentId = nodeData.id;\r\n      });\r\n      var dtd = $.Deferred();\r\n      // construct the content of node\r\n      var $nodeDiv = $('<div' + (opts.draggable ? ' draggable=\"true\"' : '') + (nodeData[opts.nodeId] ? ' id=\"' + nodeData[opts.nodeId] + '\"' : '') + (nodeData.parentId ? ' data-parent=\"' + nodeData.parentId + '\"' : '') + '>')\r\n        .addClass('node ' + (nodeData.className || '') +  (level >= opts.depth ? ' slide-up' : ''));\r\n      if (opts.nodeTemplate) {\r\n        $nodeDiv.append(opts.nodeTemplate(nodeData));\r\n      } else {\r\n        $nodeDiv.append('<div class=\"title\">' + nodeData[opts.nodeTitle] + '</div>')\r\n          .append(typeof opts.nodeContent !== 'undefined' ? '<div class=\"content\">' + (nodeData[opts.nodeContent] || '') + '</div>' : '');\r\n      }\r\n      // append 4 direction arrows or expand/collapse buttons\r\n      var flags = nodeData.relationship || '';\r\n      if (opts.verticalDepth && (level + 2) > opts.verticalDepth) {\r\n        if ((level + 1) >= opts.verticalDepth && Number(flags.substr(2,1))) {\r\n          var icon = level + 1  >= opts.depth ? 'plus' : 'minus';\r\n          $nodeDiv.append('<i class=\"toggleBtn fa fa-' + icon + '-square\"></i>');\r\n        }\r\n      } else {\r\n        if (Number(flags.substr(0,1))) {\r\n          $nodeDiv.append('<i class=\"edge verticalEdge topEdge fa\"></i>');\r\n        }\r\n        if(Number(flags.substr(1,1))) {\r\n          $nodeDiv.append('<i class=\"edge horizontalEdge rightEdge fa\"></i>' +\r\n            '<i class=\"edge horizontalEdge leftEdge fa\"></i>');\r\n        }\r\n        if(Number(flags.substr(2,1))) {\r\n          $nodeDiv.append('<i class=\"edge verticalEdge bottomEdge fa\"></i>')\r\n            .children('.title').prepend('<i class=\"fa '+ opts.parentNodeSymbol + ' symbol\"></i>');\r\n        }\r\n      }\r\n\r\n      $nodeDiv.on('mouseenter mouseleave', function(event) {\r\n        var $node = $(this), flag = false;\r\n        var $topEdge = $node.children('.topEdge');\r\n        var $rightEdge = $node.children('.rightEdge');\r\n        var $bottomEdge = $node.children('.bottomEdge');\r\n        var $leftEdge = $node.children('.leftEdge');\r\n        if (event.type === 'mouseenter') {\r\n          if ($topEdge.length) {\r\n            flag = that.getNodeState($node, 'parent').visible;\r\n            $topEdge.toggleClass('fa-chevron-up', !flag).toggleClass('fa-chevron-down', flag);\r\n          }\r\n          if ($bottomEdge.length) {\r\n            flag = that.getNodeState($node, 'children').visible;\r\n            $bottomEdge.toggleClass('fa-chevron-down', !flag).toggleClass('fa-chevron-up', flag);\r\n          }\r\n          if ($leftEdge.length) {\r\n            that.switchHorizontalArrow($node);\r\n          }\r\n        } else {\r\n          $node.children('.edge').removeClass('fa-chevron-up fa-chevron-down fa-chevron-right fa-chevron-left');\r\n        }\r\n      });\r\n\r\n      // define click event handler\r\n      $nodeDiv.on('click', function(event) {\r\n        $(this).closest('.orgchart').find('.focused').removeClass('focused');\r\n        $(this).addClass('focused');\r\n      });\r\n\r\n      // define click event handler for the top edge\r\n      $nodeDiv.on('click', '.topEdge', function(event) {\r\n        event.stopPropagation();\r\n        var $that = $(this);\r\n        var $node = $that.parent();\r\n        var parentState = that.getNodeState($node, 'parent');\r\n        if (parentState.exist) {\r\n          var $parent = $node.closest('table').closest('tr').siblings(':first').find('.node');\r\n          if ($parent.is('.slide')) { return; }\r\n          // hide the ancestor nodes and sibling nodes of the specified node\r\n          if (parentState.visible) {\r\n            that.hideParent($node);\r\n            $parent.one('transitionend', function() {\r\n              if (that.isInAction($node)) {\r\n                that.switchVerticalArrow($that);\r\n                that.switchHorizontalArrow($node);\r\n              }\r\n            });\r\n          } else { // show the ancestors and siblings\r\n            that.showParent($node);\r\n          }\r\n        } else {\r\n          // load the new parent node of the specified node by ajax request\r\n          var nodeId = $that.parent()[0].id;\r\n          // start up loading status\r\n          if (that.startLoading($that, $node, opts)) {\r\n          // load new nodes\r\n            $.ajax({ 'url': $.isFunction(opts.ajaxURL.parent) ? opts.ajaxURL.parent(nodeData) : opts.ajaxURL.parent + nodeId, 'dataType': 'json' })\r\n            .done(function(data) {\r\n              if ($node.closest('.orgchart').data('inAjax')) {\r\n                if (!$.isEmptyObject(data)) {\r\n                  that.addParent($node, data, opts);\r\n                }\r\n              }\r\n            })\r\n            .fail(function() { console.log('Failed to get parent node data'); })\r\n            .always(function() { that.endLoading($that, $node, opts); });\r\n          }\r\n        }\r\n      });\r\n\r\n      // bind click event handler for the bottom edge\r\n      $nodeDiv.on('click', '.bottomEdge', function(event) {\r\n        event.stopPropagation();\r\n        var $that = $(this);\r\n        var $node = $that.parent();\r\n        var childrenState = that.getNodeState($node, 'children');\r\n        if (childrenState.exist) {\r\n          var $children = $node.closest('tr').siblings(':last');\r\n          if ($children.find('.node:visible').is('.slide')) { return; }\r\n          // hide the descendant nodes of the specified node\r\n          if (childrenState.visible) {\r\n            that.hideChildren($node);\r\n          } else { // show the descendants\r\n            that.showChildren($node);\r\n          }\r\n        } else { // load the new children nodes of the specified node by ajax request\r\n          var nodeId = $that.parent()[0].id;\r\n          if (that.startLoading($that, $node, opts)) {\r\n            $.ajax({ 'url': $.isFunction(opts.ajaxURL.children) ? opts.ajaxURL.children(nodeData) : opts.ajaxURL.children + nodeId, 'dataType': 'json' })\r\n            .done(function(data, textStatus, jqXHR) {\r\n              if ($node.closest('.orgchart').data('inAjax')) {\r\n                if (data.children.length) {\r\n                  that.addChildren($node, data, $.extend({}, opts, { depth: 0 }));\r\n                }\r\n              }\r\n            })\r\n            .fail(function(jqXHR, textStatus, errorThrown) {\r\n              console.log('Failed to get children nodes data');\r\n            })\r\n            .always(function() {\r\n              that.endLoading($that, $node, opts);\r\n            });\r\n          }\r\n        }\r\n      });\r\n\r\n      // event handler for toggle buttons in Hybrid(horizontal + vertical) OrgChart\r\n      $nodeDiv.on('click', '.toggleBtn', function(event) {\r\n        var $this = $(this);\r\n        var $descWrapper = $this.parent().next();\r\n        var $descendants = $descWrapper.find('.node');\r\n        var $children = $descWrapper.children().children('.node');\r\n        if ($children.is('.slide')) { return; }\r\n        $this.toggleClass('fa-plus-square fa-minus-square');\r\n        if ($descendants.eq(0).is('.slide-up')) {\r\n          $descWrapper.removeClass('hidden');\r\n          that.repaint($children.get(0));\r\n          $children.addClass('slide').removeClass('slide-up').eq(0).one('transitionend', function() {\r\n            $children.removeClass('slide');\r\n          });\r\n        } else {\r\n          $descendants.addClass('slide slide-up').eq(0).one('transitionend', function() {\r\n            $descendants.removeClass('slide');\r\n            // $descWrapper.addClass('hidden');\r\n            $descendants.closest('ul').addClass('hidden');\r\n          });\r\n          $descendants.find('.toggleBtn').removeClass('fa-minus-square').addClass('fa-plus-square');\r\n        }\r\n      });\r\n\r\n      // bind click event handler for the left and right edges\r\n      $nodeDiv.on('click', '.leftEdge, .rightEdge', function(event) {\r\n        event.stopPropagation();\r\n        var $that = $(this);\r\n        var $node = $that.parent();\r\n        var siblingsState = that.getNodeState($node, 'siblings');\r\n        if (siblingsState.exist) {\r\n          var $siblings = $node.closest('table').parent().siblings();\r\n          if ($siblings.find('.node:visible').is('.slide')) { return; }\r\n          if (opts.toggleSiblingsResp) {\r\n            var $prevSib = $node.closest('table').parent().prev();\r\n            var $nextSib = $node.closest('table').parent().next();\r\n            if ($that.is('.leftEdge')) {\r\n              if ($prevSib.is('.hidden')) {\r\n                that.showSiblings($node, 'left');\r\n              } else {\r\n                that.hideSiblings($node, 'left');\r\n              }\r\n            } else {\r\n              if ($nextSib.is('.hidden')) {\r\n                that.showSiblings($node, 'right');\r\n              } else {\r\n                that.hideSiblings($node, 'right');\r\n              }\r\n            }\r\n          } else {\r\n            if (siblingsState.visible) {\r\n              that.hideSiblings($node);\r\n            } else {\r\n              that.showSiblings($node);\r\n            }\r\n          }\r\n        } else {\r\n          // load the new sibling nodes of the specified node by ajax request\r\n          var nodeId = $that.parent()[0].id;\r\n          var url = (that.getNodeState($node, 'parent').exist) ?\r\n            ($.isFunction(opts.ajaxURL.siblings) ? opts.ajaxURL.siblings(nodeData) : opts.ajaxURL.siblings + nodeId) :\r\n            ($.isFunction(opts.ajaxURL.families) ? opts.ajaxURL.families(nodeData) : opts.ajaxURL.families + nodeId);\r\n          if (that.startLoading($that, $node, opts)) {\r\n            $.ajax({ 'url': url, 'dataType': 'json' })\r\n            .done(function(data, textStatus, jqXHR) {\r\n              if ($node.closest('.orgchart').data('inAjax')) {\r\n                if (data.siblings || data.children) {\r\n                  that.addSiblings($node, data, opts);\r\n                }\r\n              }\r\n            })\r\n            .fail(function(jqXHR, textStatus, errorThrown) {\r\n              console.log('Failed to get sibling nodes data');\r\n            })\r\n            .always(function() {\r\n              that.endLoading($that, $node, opts);\r\n            });\r\n          }\r\n        }\r\n      });\r\n      if (opts.draggable) {\r\n        $nodeDiv.on('dragstart', function(event) {\r\n          var origEvent = event.originalEvent;\r\n          var isFirefox = /firefox/.test(window.navigator.userAgent.toLowerCase());\r\n          if (isFirefox) {\r\n            origEvent.dataTransfer.setData('text/html', 'hack for firefox');\r\n          }\r\n          // if users enable zoom or direction options\r\n          if ($nodeDiv.closest('.orgchart').css('transform') !== 'none') {\r\n            var ghostNode, nodeCover;\r\n            if (!document.querySelector('.ghost-node')) {\r\n              ghostNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n              ghostNode.classList.add('ghost-node');\r\n              nodeCover = document.createElementNS('http://www.w3.org/2000/svg','rect');\r\n              ghostNode.appendChild(nodeCover);\r\n              $nodeDiv.closest('.orgchart').append(ghostNode);\r\n            } else {\r\n              ghostNode = $nodeDiv.closest('.orgchart').children('.ghost-node').get(0);\r\n              nodeCover = $(ghostNode).children().get(0);\r\n            }\r\n            var transValues = $nodeDiv.closest('.orgchart').css('transform').split(',');\r\n            var scale = Math.abs(window.parseFloat((opts.direction === 't2b' || opts.direction === 'b2t') ? transValues[0].slice(transValues[0].indexOf('(') + 1) : transValues[1]));\r\n            ghostNode.setAttribute('width', $nodeDiv.outerWidth(false));\r\n            ghostNode.setAttribute('height', $nodeDiv.outerHeight(false));\r\n            nodeCover.setAttribute('x',5 * scale);\r\n            nodeCover.setAttribute('y',5 * scale);\r\n            nodeCover.setAttribute('width', 120 * scale);\r\n            nodeCover.setAttribute('height', 40 * scale);\r\n            nodeCover.setAttribute('rx', 4 * scale);\r\n            nodeCover.setAttribute('ry', 4 * scale);\r\n            nodeCover.setAttribute('stroke-width', 1 * scale);\r\n            var xOffset = origEvent.offsetX * scale;\r\n            var yOffset = origEvent.offsetY * scale;\r\n            if (opts.direction === 'l2r') {\r\n              xOffset = origEvent.offsetY * scale;\r\n              yOffset = origEvent.offsetX * scale;\r\n            } else if (opts.direction === 'r2l') {\r\n              xOffset = $nodeDiv.outerWidth(false) - origEvent.offsetY * scale;\r\n              yOffset = origEvent.offsetX * scale;\r\n            } else if (opts.direction === 'b2t') {\r\n              xOffset = $nodeDiv.outerWidth(false) - origEvent.offsetX * scale;\r\n              yOffset = $nodeDiv.outerHeight(false) - origEvent.offsetY * scale;\r\n            }\r\n            if (isFirefox) { // hack for old version of Firefox(< 48.0)\r\n              nodeCover.setAttribute('fill', 'rgb(255, 255, 255)');\r\n              nodeCover.setAttribute('stroke', 'rgb(191, 0, 0)');\r\n              var ghostNodeWrapper = document.createElement('img');\r\n              ghostNodeWrapper.src = 'data:image/svg+xml;utf8,' + (new XMLSerializer()).serializeToString(ghostNode);\r\n              origEvent.dataTransfer.setDragImage(ghostNodeWrapper, xOffset, yOffset);\r\n            } else {\r\n              origEvent.dataTransfer.setDragImage(ghostNode, xOffset, yOffset);\r\n            }\r\n          }\r\n          var $dragged = $(this);\r\n          var $dragZone = $dragged.closest('.nodes').siblings().eq(0).find('.node:first');\r\n          var $dragHier = $dragged.closest('table').find('.node');\r\n          $dragged.closest('.orgchart')\r\n            .data('dragged', $dragged)\r\n            .find('.node').each(function(index, node) {\r\n              if ($dragHier.index(node) === -1) {\r\n                if (opts.dropCriteria) {\r\n                  if (opts.dropCriteria($dragged, $dragZone, $(node))) {\r\n                    $(node).addClass('allowedDrop');\r\n                  }\r\n                } else {\r\n                  $(node).addClass('allowedDrop');\r\n                }\r\n              }\r\n            });\r\n        })\r\n        .on('dragover', function(event) {\r\n          event.preventDefault();\r\n          if (!$(this).is('.allowedDrop')) {\r\n            event.originalEvent.dataTransfer.dropEffect = 'none';\r\n          }\r\n        })\r\n        .on('dragend', function(event) {\r\n          $(this).closest('.orgchart').find('.allowedDrop').removeClass('allowedDrop');\r\n        })\r\n        .on('drop', function(event) {\r\n          var $dropZone = $(this);\r\n          var $orgchart = $dropZone.closest('.orgchart');\r\n          var $dragged = $orgchart.data('dragged');\r\n          $orgchart.find('.allowedDrop').removeClass('allowedDrop');\r\n          var $dragZone = $dragged.closest('.nodes').siblings().eq(0).children();\r\n          // firstly, deal with the hierarchy of drop zone\r\n          if (!$dropZone.closest('tr').siblings().length) { // if the drop zone is a leaf node\r\n            $dropZone.append('<i class=\"edge verticalEdge bottomEdge fa\"></i>')\r\n              .parent().attr('colspan', 2)\r\n              .parent().after('<tr class=\"lines\"><td colspan=\"2\"><div class=\"downLine\"></div></td></tr>'\r\n              + '<tr class=\"lines\"><td class=\"rightLine\">&nbsp;</td><td class=\"leftLine\">&nbsp;</td></tr>'\r\n              + '<tr class=\"nodes\"></tr>')\r\n              .siblings(':last').append($dragged.find('.horizontalEdge').remove().end().closest('table').parent());\r\n          } else {\r\n            var dropColspan = parseInt($dropZone.parent().attr('colspan')) + 2;\r\n            var horizontalEdges = '<i class=\"edge horizontalEdge rightEdge fa\"></i><i class=\"edge horizontalEdge leftEdge fa\"></i>';\r\n            $dropZone.closest('tr').next().addBack().children().attr('colspan', dropColspan);\r\n            if (!$dragged.find('.horizontalEdge').length) {\r\n              $dragged.append(horizontalEdges);\r\n            }\r\n            $dropZone.closest('tr').siblings().eq(1).children(':last').before('<td class=\"leftLine topLine\">&nbsp;</td><td class=\"rightLine topLine\">&nbsp;</td>')\r\n              .end().next().append($dragged.closest('table').parent());\r\n            var $dropSibs = $dragged.closest('table').parent().siblings().find('.node:first');\r\n            if ($dropSibs.length === 1) {\r\n              $dropSibs.append(horizontalEdges);\r\n            }\r\n          }\r\n          // secondly, deal with the hierarchy of dragged node\r\n          var dragColspan = parseInt($dragZone.attr('colspan'));\r\n          if (dragColspan > 2) {\r\n            $dragZone.attr('colspan', dragColspan - 2)\r\n              .parent().next().children().attr('colspan', dragColspan - 2)\r\n              .end().next().children().slice(1, 3).remove();\r\n            var $dragSibs = $dragZone.parent().siblings('.nodes').children().find('.node:first');\r\n            if ($dragSibs.length ===1) {\r\n              $dragSibs.find('.horizontalEdge').remove();\r\n            }\r\n          } else {\r\n            $dragZone.removeAttr('colspan')\r\n              .find('.bottomEdge').remove()\r\n              .end().end().siblings().remove();\r\n          }\r\n          $orgchart.triggerHandler({ 'type': 'nodedropped.orgchart', 'draggedNode': $dragged, 'dragZone': $dragZone.children(), 'dropZone': $dropZone });\r\n        });\r\n      }\r\n      // allow user to append dom modification after finishing node create of orgchart\r\n      if (opts.createNode) {\r\n        opts.createNode($nodeDiv, nodeData);\r\n      }\r\n      dtd.resolve($nodeDiv);\r\n      return dtd.promise();\r\n    },\r\n    // recursively build the tree\r\n    buildHierarchy: function ($appendTo, nodeData, level, opts, callback) {\r\n      var that = this;\r\n      var $nodeWrapper;\r\n      // Construct the node\r\n      var $childNodes = nodeData.children;\r\n      var hasChildren = $childNodes ? $childNodes.length : false;\r\n      var isVerticalNode = (opts.verticalDepth && (level + 1) >= opts.verticalDepth) ? true : false;\r\n      if (Object.keys(nodeData).length > 1) { // if nodeData has nested structure\r\n        $nodeWrapper = isVerticalNode ? $appendTo : $('<table>');\r\n        if (!isVerticalNode) {\r\n          $appendTo.append($nodeWrapper);\r\n        }\r\n        $.when(this.createNode(nodeData, level, opts))\r\n        .done(function($nodeDiv) {\r\n          if (isVerticalNode) {\r\n            $nodeWrapper.append($nodeDiv);\r\n          }else {\r\n            $nodeWrapper.append($nodeDiv.wrap('<tr><td' + (hasChildren ? ' colspan=\"' + $childNodes.length * 2 + '\"' : '') + '></td></tr>').closest('tr'));\r\n          }\r\n          if (callback) {\r\n            callback();\r\n          }\r\n        })\r\n        .fail(function() {\r\n          console.log('Failed to creat node')\r\n        });\r\n      }\r\n      // Construct the inferior nodes and connectiong lines\r\n      if (hasChildren) {\r\n        if (Object.keys(nodeData).length === 1) { // if nodeData is just an array\r\n          $nodeWrapper = $appendTo;\r\n        }\r\n        var isHidden = (level + 1 >= opts.depth || nodeData.collapsed) ? ' hidden' : '';\r\n        var isVerticalLayer = (opts.verticalDepth && (level + 2) >= opts.verticalDepth) ? true : false;\r\n\r\n        // draw the line close to parent node\r\n        if (!isVerticalLayer) {\r\n          $nodeWrapper.append('<tr class=\"lines' + isHidden + '\"><td colspan=\"' + $childNodes.length * 2 + '\"><div class=\"downLine\"></div></td></tr>');\r\n        }\r\n        // draw the lines close to children nodes\r\n        var lineLayer = '<tr class=\"lines' + isHidden + '\"><td class=\"rightLine\">&nbsp;</td>';\r\n        for (var i=1; i<$childNodes.length; i++) {\r\n          lineLayer += '<td class=\"leftLine topLine\">&nbsp;</td><td class=\"rightLine topLine\">&nbsp;</td>';\r\n        }\r\n        lineLayer += '<td class=\"leftLine\">&nbsp;</td></tr>';\r\n        var $nodeLayer;\r\n        if (isVerticalLayer) {\r\n          $nodeLayer = $('<ul>');\r\n          if (isHidden) {\r\n            $nodeLayer.addClass(isHidden);\r\n          }\r\n          if (level + 2 === opts.verticalDepth) {\r\n            $nodeWrapper.append('<tr class=\"verticalNodes' + isHidden + '\"><td></td></tr>')\r\n              .find('.verticalNodes').children().append($nodeLayer);\r\n          } else {\r\n            $nodeWrapper.append($nodeLayer);\r\n          }\r\n        } else {\r\n          $nodeLayer = $('<tr class=\"nodes' + isHidden + '\">');\r\n          $nodeWrapper.append(lineLayer).append($nodeLayer);\r\n        }\r\n        // recurse through children nodes\r\n        $childNodes && $.each($childNodes, function() {\r\n          var $nodeCell = isVerticalLayer ? $('<li>') : $('<td colspan=\"2\">');\r\n          $nodeLayer.append($nodeCell);\r\n          that.buildHierarchy($nodeCell, this, level + 1, opts, callback);\r\n        });\r\n      }\r\n    },\r\n    // build the child nodes of specific node\r\n    buildChildNode: function ($appendTo, nodeData, opts, callback) {\r\n      var opts = opts || $appendTo.closest('.orgchart').data('options');\r\n      var data = nodeData.children || nodeData.siblings;\r\n      $appendTo.find('td:first').attr('colspan', data.length * 2);\r\n      this.buildHierarchy($appendTo, { 'children': data }, 0, opts, callback);\r\n    },\r\n    // exposed method\r\n    addChildren: function ($node, data, opts) {\r\n      var that = this;\r\n      var opts = opts || $node.closest('.orgchart').data('options');\r\n      var count = 0;\r\n      this.buildChildNode($node.closest('table'), data, opts, function() {\r\n        if (++count === data.children.length) {\r\n          if (!$node.children('.bottomEdge').length) {\r\n            $node.append('<i class=\"edge verticalEdge bottomEdge fa\"></i>');\r\n          }\r\n          if (!$node.find('.symbol').length) {\r\n            $node.children('.title').prepend('<i class=\"fa '+ opts.parentNodeSymbol + ' symbol\"></i>');\r\n          }\r\n          that.showChildren($node);\r\n        }\r\n      });\r\n    },\r\n    // build the parent node of specific node\r\n    buildParentNode: function ($currentRoot, nodeData, opts, callback) {\r\n      var that = this;\r\n      var $table = $('<table>');\r\n      nodeData.relationship = nodeData.relationship || '001';\r\n      $.when(this.createNode(nodeData, 0, opts || $currentRoot.closest('.orgchart').data('options')))\r\n        .done(function($nodeDiv) {\r\n          $table.append($nodeDiv.removeClass('slide-up').addClass('slide-down').wrap('<tr class=\"hidden\"><td colspan=\"2\"></td></tr>').closest('tr'));\r\n          $table.append('<tr class=\"lines hidden\"><td colspan=\"2\"><div class=\"downLine\"></div></td></tr>');\r\n          var linesRow = '<td class=\"rightLine\">&nbsp;</td><td class=\"leftLine\">&nbsp;</td>';\r\n          $table.append('<tr class=\"lines hidden\">' + linesRow + '</tr>');\r\n          var $chart = that.$chart;\r\n          $chart.prepend($table)\r\n            .children('table:first').append('<tr class=\"nodes\"><td colspan=\"2\"></td></tr>')\r\n            .children('tr:last').children().append($chart.children('table').last());\r\n          callback();\r\n        })\r\n        .fail(function() {\r\n          console.log('Failed to create parent node');\r\n        });\r\n    },\r\n    // exposed method\r\n    addParent: function ($currentRoot, data, opts) {\r\n      var that = this;\r\n      this.buildParentNode($currentRoot, data, opts, function() {\r\n        if (!$currentRoot.children('.topEdge').length) {\r\n          $currentRoot.children('.title').after('<i class=\"edge verticalEdge topEdge fa\"></i>');\r\n        }\r\n        that.showParent($currentRoot);\r\n      });\r\n    },\r\n    // subsequent processing of build sibling nodes\r\n    complementLine: function ($oneSibling, siblingCount, existingSibligCount) {\r\n      var lines = '';\r\n      for (var i = 0; i < existingSibligCount; i++) {\r\n        lines += '<td class=\"leftLine topLine\">&nbsp;</td><td class=\"rightLine topLine\">&nbsp;</td>';\r\n      }\r\n      $oneSibling.parent().prevAll('tr:gt(0)').children().attr('colspan', siblingCount * 2)\r\n        .end().next().children(':first').after(lines);\r\n    },\r\n    // build the sibling nodes of specific node\r\n    buildSiblingNode: function ($nodeChart, nodeData, opts, callback) {\r\n      var that = this;\r\n      var opts = opts || $nodeChart.closest('.orgchart').data('options');\r\n      var newSiblingCount = nodeData.siblings ? nodeData.siblings.length : nodeData.children.length;\r\n      var existingSibligCount = $nodeChart.parent().is('td') ? $nodeChart.closest('tr').children().length : 1;\r\n      var siblingCount = existingSibligCount + newSiblingCount;\r\n      var insertPostion = (siblingCount > 1) ? Math.floor(siblingCount/2 - 1) : 0;\r\n      // just build the sibling nodes for the specific node\r\n      if ($nodeChart.parent().is('td')) {\r\n        var $parent = $nodeChart.closest('tr').prevAll('tr:last');\r\n        $nodeChart.closest('tr').prevAll('tr:lt(2)').remove();\r\n        var childCount = 0;\r\n        this.buildChildNode($nodeChart.parent().closest('table'), nodeData, opts, function() {\r\n          if (++childCount === newSiblingCount) {\r\n            var $siblingTds = $nodeChart.parent().closest('table').children('tr:last').children('td');\r\n            if (existingSibligCount > 1) {\r\n              that.complementLine($siblingTds.eq(0).before($nodeChart.closest('td').siblings().addBack().unwrap()), siblingCount, existingSibligCount);\r\n              $siblingTds.addClass('hidden').find('.node').addClass('slide-left');\r\n            } else {\r\n              that.complementLine($siblingTds.eq(insertPostion).after($nodeChart.closest('td').unwrap()), siblingCount, 1);\r\n              $siblingTds.not(':eq(' + insertPostion + 1 + ')').addClass('hidden')\r\n                .slice(0, insertPostion).find('.node').addClass('slide-right')\r\n                .end().end().slice(insertPostion).find('.node').addClass('slide-left');\r\n            }\r\n            callback();\r\n          }\r\n        });\r\n      } else { // build the sibling nodes and parent node for the specific ndoe\r\n        var nodeCount = 0;\r\n        this.buildHierarchy($nodeChart.closest('.orgchart'), nodeData, 0, opts, function() {\r\n          if (++nodeCount === siblingCount) {\r\n            that.complementLine($nodeChart.next().children('tr:last')\r\n              .children().eq(insertPostion).after($('<td colspan=\"2\">')\r\n              .append($nodeChart)), siblingCount, 1);\r\n            $nodeChart.closest('tr').siblings().eq(0).addClass('hidden').find('.node').addClass('slide-down');\r\n            $nodeChart.parent().siblings().addClass('hidden')\r\n              .slice(0, insertPostion).find('.node').addClass('slide-right')\r\n              .end().end().slice(insertPostion).find('.node').addClass('slide-left');\r\n            callback();\r\n          }\r\n        });\r\n      }\r\n    },\r\n    //\r\n    addSiblings: function ($node, data, opts) {\r\n      var that = this;\r\n      this.buildSiblingNode($node.closest('table'), data, opts, function() {\r\n        $node.closest('.nodes').data('siblingsLoaded', true);\r\n        if (!$node.children('.leftEdge').length) {\r\n          $node.children('.topEdge').after('<i class=\"edge horizontalEdge rightEdge fa\"></i><i class=\"edge horizontalEdge leftEdge fa\"></i>');\r\n        }\r\n        that.showSiblings($node);\r\n      });\r\n    },\r\n    //\r\n    removeNodes: function ($node) {\r\n      var $parent = $node.closest('table').parent();\r\n      var $sibs = $parent.parent().siblings();\r\n      if ($parent.is('td')) {\r\n        if (this.getNodeState($node, 'siblings').exist) {\r\n          $sibs.eq(2).children('.topLine:lt(2)').remove();\r\n          $sibs.slice(0, 2).children().attr('colspan', $sibs.eq(2).children().length);\r\n          $parent.remove();\r\n        } else {\r\n          $sibs.eq(0).children().removeAttr('colspan')\r\n            .find('.bottomEdge').remove()\r\n            .end().end().siblings().remove();\r\n        }\r\n      } else {\r\n        $parent.add($parent.siblings()).remove();\r\n      }\r\n    }\r\n  };\r\n\r\n  $.fn.orgchart = function (opts) {\r\n    return new OrgChart(this, opts).init();\r\n  };\r\n\r\n}));"]}